{"remainingRequest":"E:\\vuetest\\vue_shop\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js??vue-loader-options!E:\\vuetest\\vue_shop\\src\\components\\power\\Attrs.vue?vue&type=style&index=0&id=163115d0&scoped=true&lang=css&","dependencies":[{"path":"E:\\vuetest\\vue_shop\\src\\components\\power\\Attrs.vue","mtime":1614308435473},{"path":"E:\\vuetest\\vue_shop\\node_modules\\_css-loader@3.6.0@css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vuetest\\vue_shop\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\vuetest\\vue_shop\\node_modules\\_postcss-loader@3.0.0@postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\vuetest\\vue_shop\\node_modules\\_cache-loader@4.1.0@cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\vuetest\\vue_shop\\node_modules\\_vue-loader@15.9.6@vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtdGFicyB7DQogIG1hcmdpbjogMTVweCAwOw0KfQ0KDQouZWwtdGFnIHsNCiAgbWFyZ2luOiAxMHB4Ow0KfQ0KDQouaW5wdXQtbmV3LXRhZyB7DQogIHdpZHRoOiAxMjBweDsNCn0NCg=="},{"version":3,"sources":["Attrs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0VA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Attrs.vue","sourceRoot":"src/components/power","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 面包屑导航区 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/Home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>系统菜单</el-breadcrumb-item>\r\n      <el-breadcrumb-item>参数管理</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <el-card class=\"box-card\">\r\n      <el-alert show-icon closable title=\"这是参数列表\" type=\"warning\">\r\n      </el-alert>\r\n      <el-tabs v-model=\"activeName\" @tab-click=\"handleClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"manry\">\r\n          <el-button type=\"primary\" @click=\"addAttr\">添加参数</el-button>\r\n          <el-table :data=\"manryData\" style=\"width: 100%\" border stripe>\r\n            <el-table-column type=\"expand\">\r\n              <!-- 循环渲染tag标签 -->\r\n              <template v-slot=\"scope\">\r\n                <el-tag\r\n                  class=\"tagClass\"\r\n                  v-for=\"(item, index) in scope.row.attrMemo\"\r\n                  :key=\"index\"\r\n                  closable\r\n                  @close=\"closeTag(index, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button@click=\"deleteAttr(scope.row.id)\"\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\"></el-table-column>\r\n            <el-table-column prop=\"attrName\" label=\"参数名称\"></el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\"\r\n                @click=\"deleteAttr(scope.row.id)\"  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <el-button type=\"primary\" @click=\"addAttr\">添加属性</el-button>\r\n          <el-table :data=\"onlyData\" style=\"width: 100%\" border stripe>\r\n            <el-table-column type=\"expand\">\r\n              <template v-slot=\"scope\">\r\n                <el-tag\r\n                  v-for=\"(item, index) in scope.row.attrMemo\"\r\n                  :key=\"index\"\r\n                  closable\r\n                  @close=\"closeTag(index, scope.row)\"\r\n                >\r\n                  {{ item }}\r\n                </el-tag>\r\n                <el-input\r\n                  class=\"input-new-tag\"\r\n                  v-if=\"scope.row.inputVisible\"\r\n                  v-model=\"scope.row.inputValue\"\r\n                  ref=\"saveTagInput\"\r\n                  size=\"small\"\r\n                  @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                  @blur=\"handleInputConfirm(scope.row)\"\r\n                >\r\n                </el-input>\r\n                <el-button\r\n                  v-else\r\n                  class=\"button-new-tag\"\r\n                  size=\"small\"\r\n                  @click=\"showInput(scope.row)\"\r\n                  >+ New Tag</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column type=\"index\"> </el-table-column>\r\n            <el-table-column prop=\"attrName\" label=\"属性名称\">\r\n            </el-table-column>\r\n            <el-table-column label=\"操作\">\r\n              <template v-slot=\"scope\">\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"primary\"\r\n                  icon=\"el-icon-edit\"\r\n                  @click=\"showEditDialog(scope.row.id)\"\r\n                  >编辑</el-button\r\n                >\r\n                <el-button\r\n                  size=\"mini\"\r\n                  type=\"danger\"\r\n                  icon=\"el-icon-delete\"\r\n                  @click=\"deleteAttr(scope.row.id)\"\r\n                  >删除</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-card>\r\n\r\n    <!-- 新增对话框区域 -->\r\n    <el-dialog\r\n      :title=\"'新增' + titleText\"\r\n      :visible.sync=\"addAttrdialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"addFromClose\"\r\n    >\r\n      <el-form\r\n        :model=\"addForm\"\r\n        :rules=\"addFromRules\"\r\n        ref=\"addFormRef\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attrName\">\r\n          <el-input v-model=\"addForm.attrName\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addAttrdialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addAttrInfo\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n\r\n    <!-- 修改对话框区域 -->\r\n    <el-dialog\r\n      :title=\"'修改' + titleText\"\r\n      :visible.sync=\"editDialogVisible\"\r\n      width=\"50%\"\r\n      @close=\"editFormClose\"\r\n    >\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"addFromRules\"\r\n        ref=\"editFormRef\"\r\n        label-width=\"100px\"\r\n        class=\"demo-ruleForm\"\r\n      >\r\n        <el-form-item :label=\"titleText\" prop=\"attrName\">\r\n          <el-input v-model=\"editForm.attrName\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"upAttr\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getAttrListInfo,\r\n  upAttrsById,\r\n  addAttrs,\r\n  getAttrById,\r\n  upAttrInfoById,\r\n  deleteAttrById\r\n} from \"../../network/attrs\";\r\nexport default {\r\n  name: \"Attrs\",\r\n  data() {\r\n    return {\r\n      //活跃状态的列表\r\n      activeName: \"manry\",\r\n      //参数列表数据\r\n      manryData: [],\r\n      onlyData: [],\r\n      // 控制添加dialog显示隐藏按钮\r\n      addAttrdialogVisible: false,\r\n      // 新增表单数据\r\n      addForm: { attrName: \"\" },\r\n      addFromRules: {\r\n        attrName: [{ required: true, message: \"请输入数据\", trigger: \"blur\" }],\r\n      },\r\n      // 修改对话框显示隐藏\r\n      editDialogVisible: false,\r\n      // 修改对话框参数列表\r\n      editForm: [],\r\n    };\r\n  },\r\n  created() {\r\n    this.getAttrsInfo();\r\n  },\r\n  computed: {\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === \"manry\") {\r\n        return \"动态参数\";\r\n      } else {\r\n        return \"静态属性\";\r\n      }\r\n    },\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    //获取参数列表\r\n    getAttrsInfo() {\r\n      getAttrListInfo(this.activeName).then((res) => {\r\n        res.forEach((item) => {\r\n          item.attrMemo = item.attrMemo ? item.attrMemo.split(\",\") : [];\r\n          // 控制文本框的显示与隐藏\r\n          item.inputVisible = false;\r\n          //文本框输入的值\r\n          item.inputValue = \"\";\r\n        });\r\n        if (this.activeName == \"manry\") {\r\n          //将配置参数改为数组形式\r\n          this.manryData = res;\r\n        } else {\r\n          this.onlyData = res;\r\n        }\r\n      });\r\n    },\r\n    handleClick() {\r\n      this.getAttrsInfo();\r\n    },\r\n    // 文本框失去焦点或按下Enter健\r\n    handleInputConfirm(row) {\r\n      if (row.inputValue.trim().length === 0) {\r\n        row.inputValue = \"\";\r\n        row.inputVisible = false;\r\n        return;\r\n      }\r\n\r\n      row.attrMemo.push(row.inputValue.trim());\r\n      row.inputVisible = false;\r\n      row.inputValue = \"\";\r\n\r\n      //如果没有return则证明输入了内容,需要做提交数据处理\r\n      upAttrsById(row.id, row.attrMemo.join(\",\"), this.activeName).then(\r\n        (res) => {\r\n          if (res != 0) return this.$message.error(\"更新数据失败\");\r\n          this.$message.success(\"更新数据成功\");\r\n        }\r\n      );\r\n    },\r\n    // 点击按钮,展示文本输入框\r\n    showInput(row) {\r\n      row.inputVisible = true;\r\n      //获取文本框焦点\r\n      this.$nextTick((_) => {\r\n        this.$refs.saveTagInput.$refs.input.focus();\r\n      });\r\n    },\r\n    //删除对应的参数可选项\r\n    closeTag(index, row) {\r\n      row.attrMemo.splice(index, 1);\r\n\r\n      //如果没有return则证明输入了内容,需要做提交数据处理\r\n      upAttrsById(row.id, row.attrMemo.join(\",\"), this.activeName).then(\r\n        (res) => {\r\n          if (res != 0) return this.$message.error(\"更新数据失败\");\r\n          this.$message.success(\"更新数据成功\");\r\n        }\r\n      );\r\n    },\r\n    // 新增参数方法\r\n    addAttr() {\r\n      this.addAttrdialogVisible = !this.addAttrdialogVisible;\r\n    },\r\n    // 关闭添加列表\r\n    addFromClose() {\r\n      // 清空添加参数列表\r\n      this.$refs.addFormRef.resetFields();\r\n    },\r\n    // 新增参数信息\r\n    addAttrInfo() {\r\n      //表单验证\r\n      this.$refs.addFormRef.validate((valid) => {\r\n        if (!valid) return;\r\n        //发起请求\r\n        addAttrs(this.activeName, this.addForm.attrName).then((res) => {\r\n          if (res != 0) return this.$message.error(\"新增参数失败\");\r\n          this.$message.success(\"新增参数成功\");\r\n          this.addAttrdialogVisible = false;\r\n          this.getAttrsInfo();\r\n        });\r\n      });\r\n    },\r\n    // 控制修改对话框显示隐藏\r\n    showEditDialog(id) {\r\n      //根据ID获取参数数据\r\n      getAttrById(this.activeName, id).then((res) => {\r\n        this.editForm = res[0];\r\n        console.log(res);\r\n      });\r\n      this.editDialogVisible = !this.editDialogVisible;\r\n    },\r\n    // 关闭对话框,移除校验\r\n    editFormClose() {\r\n      this.$refs.editFormRef.resetFields();\r\n    },\r\n    upAttr() {\r\n      //修改数据前表单验证\r\n      upAttrInfoById(this.activeName, this.editForm).then((res) => {\r\n        if (res != 0) return this.$message.error(\"修改参数失败\");\r\n        this.$message.success(\"修改参数成功\");\r\n        this.editDialogVisible = false;\r\n        this.getAttrsInfo();\r\n      });\r\n    },\r\n    async deleteAttr(id) {\r\n      const confirm = await this.$confirm(\r\n        \"你正在删除该条参数, 是否继续?\",\r\n        \"提示\",\r\n        {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\",\r\n        }\r\n      ).catch((err) => err);\r\n      if (confirm != \"confirm\") return this.$message.info(\"您已经取消了删除\");\r\n      deleteAttrById(this.activeName,id).then((res) => {\r\n        this.getAttrsInfo();\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style  scoped>\r\n.el-tabs {\r\n  margin: 15px 0;\r\n}\r\n\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>"]}]}